openapi: 3.0.0
info:
  title: Flipkart API
  description: API's for flipkart backend 
  version: 0.1.9
  contact:
    email: mageshsk16@gmail.com
servers:
  - url: http://localhost:3000
    description: This is my localhost

# schemes: [http,https]
components:
  securitySchemes:
    BearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /register:
    post:
      tags:
        - Users
      summary: Returns the OTP for register.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mobilenum:
                  type: string
                  example: "+918798867123"
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "verify the otp"
        '403':
          description: Return the Error
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "error"

  /verifyOTPSMS:
    post:
      tags:
        - Users
      summary: Registering user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mobilenum:
                  type: string
                  example: "+918798867123"
                otp:
                  type: string
                  example: "123456"
      responses:
        '200':
          description: Return the object status and message
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successful"
                  token:
                    type: string
                    example: "token"
        '401':
          description: Return the Error
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Invalid OTP"
          
  /login:
    post:
      tags:
        - Users
      summary: Returns the OTP for Login.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mobilenum:
                  type: string
                  example: "+918798867123"
      responses:
        '200':
          description: Login to verify OTP
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "verify the otp"
        '403':
          description: Please Register
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Please Register"
  

  /getUser:
    get:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Returns a list of users.
      description: Retrieves information about registered users.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    firstname:
                      type: string
                    lastname:
                      type: string
                    email:
                      type: string
                    mobilenum:
                      type: string
                    gender:
                      type: string
                    verify:
                      type: boolean

 
  /getName:
    get:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Returns a name of the user.
      description: Retrieves firstName, lastName about registered users.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object

  /getProfile:
    get:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Returns a profile information of the user.
      description: Retrieves firstName, lastName, gender, email, mobilenum about registered users.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object

  /updateProfile1:
    put:
      tags:
        - Users
      securputity:
        - BearerAuth: []
      summary: Returns a profile information of the user.
      description: Retrieves firstName, lastName, gender registered users.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                gender:
                  type: string
      responses:
        '200':
          description: Update the firstName, lastName and gender
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Updated successfully"
        '403':
          description: Not Updated
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not updated"
  
  /updateProfileEmail:
    put:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Updates a email information of the user.
      description: Updates email registered users.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Sent OTP to mobile and Email
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "OTP sent to mobile and Email"
        '403':
          description: Not Updated
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not updated"
  /verifyOTPEMAILSMS:
    post:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Verify the OTP
      description: Verify the OTP for email and Mobilenumber
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newEmail:
                  type: string
                emailOTP:
                  type: string
                SMSOTP:
                  type: string
      responses:
        '200':
          description: Email Updated Successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Email Updated Successfully"
        '403':
          description: Not Updated
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not updated"
  /updateProfileMobileNum:
    put:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Update the MobileNumber
      description: Send the OTP Update the MobileNumber
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newMobilenum:
                  type: string
      responses:
        '200':
          description: Mobilenumber Updated Successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "OTP sent to new mobileNumber and old mobileNumber"
        '403':
          description: Not Updated
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Mobilenumber not updated"

  /verifyOldNewMobileOTP:
    post:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Verify the OTP
      description: Verify the OTP for old Mobilenumber and new Mobilenumber
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newMobilenum:
                  type: string
                newOTP:
                  type: string
                oldOTP:
                  type: string
      responses:
        '200':
          description: Mobilenumber Updated Successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Mobilenumber Updated Successfully"
        '403':
          description: Not Updated
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not updated"

  /getAddress:
    get:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Returns a address of the user.
      description: Retrieves address about registered users.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object

  /getAddress/{id}:
    get:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Returns a user by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: id of an user
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object

  /postAddress:
    post:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Adding the address.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                mobilenum:
                  type: string
                address:
                  type: string
                pincode:
                  type: string
                locality:
                  type: string
                city:
                  type: string
                state:
                  type: string
                landmark:
                  type: string
                alternate_phno:
                  type: string 
                address_type:
                  type: string
                isDefault:
                  type: boolean
      responses:
        '200':
          description: Address added
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Address added successfully"
        '403':
          description: Return the Error
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not Added"
  
  /updateAddress/{id}:
    put:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Updates a address of the user.
      description: Updates the address registered users.
      parameters:
        - name: id
          in: path
          required: true
          description: id of an address
          schema:
            type : integer
            format: int64
            minimum: 1
      requestBody:
        # required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                locality:
                  type: string
                city:
                  type: string
                state:
                  type: string
                landmark:
                  type: string
                alternate_phno:
                  type: string 
                address_type:
                  type: string
                isDefault:
                  type: boolean
                address:
                  type: string
                pincode:
                  type: string
                name:
                  type: string
                mobilenum:
                  type: string
      responses:
        '200':
          description: Update the address
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Updated successfully"
        '403':
          description: Not Updated
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not updated"

  /deleteAddress/{id}:
    delete:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Delete a address of the user.
      description: Delete the address registered users.
      parameters:
        - name: id
          in: path
          required: true
          description: id of an address
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Delete the address
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Deleted successfully"
        '403':
          description: Not Deleted
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not Deleted"

  /pan_card:
    post:
      tags:
        - Users
      security:
        - BearerAuth: []
      summary: Post a pan info of the user.
      description: Post a pan info of the registered users.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pan_number:
                  type: string
                  example: "GDJPM1234T"
                full_name:
                  type: string
                image_url:
                  type: string
                  format: binary
      responses:
        '200':
          description: pan info posted
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "pan info added successfully"
        '403':
          description: Not posted
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not posted"


#Products

  /getSegment/{id}:
    get:
      summary: Getting the segment
      description: Getting the segment with subcategory and category names
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: id of an user
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
        '403':
          description: Error
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object

  /getCategorySubcategory:
    get:
      summary: Getting the segment with category and subcategory
      description: Getting the segment with category and subcategory names
      tags:
        - Products
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
        '403':
          description: Error
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object
                  
  /getCategory:
    get:
      summary: Getting the category
      tags:
        - Products
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
        '403':
          description: Error
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object

  /getSubcategoryProducts/{id}:
    get:
      tags:
        - Products
      summary: Returns a catalog products
      parameters:
        - name: id
          in: path
          required: true
          description: id of an user
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
  /getAllSubcategoryProducts:
    get:
      summary: Getting all subcategory products
      tags:
        - Products
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
        '403':
          description: Error
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object


  /getProduct/{id}:
    get:
      tags:
        - Products
      summary: Returns a Products info
      parameters:
        - name: id
          in: path
          required: true
          description: id of an product
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object

  /getReviews/{product_items_id}:
    get:
      tags:
        - Products
      summary: Returns a reviews
      parameters:
        - name: product_items_id
          in: path
          required: true
          description: id of an priduct_items
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object

  /postReviews:
    post:
      tags:
        - Products
      security:
        - BearerAuth: []
      summary: Post the reviews
      description: Post the reviews of particular product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_items_id:
                  type: integer
                rating:
                  type: integer
                comment:
                  type: string
      responses:
        '200':
          description: Review posted Successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Review submitted"
        '403':
          description: Not Submitted
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not Submitted"

  /updateLikeCount/{id}:
    put:
      tags:
        - Products
      summary: Updates the like count of reviews
      parameters:
        - name: id
          in: path
          required: true
          description: id of review
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
  /updateDislikeCount/{id}:
    put:
      tags:
        - Products
      summary: Updates the dislike count of reviews
      parameters:
        - name: id
          in: path
          required: true
          description: id of review
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object

  /getCartDetails:
     get:
      tags:
        - Products
      security:
        - BearerAuth: []
      summary: Returns a cart details.
      description: Retrieves information about cart details.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                    status:
                      type: boolean
                      example: true
                    message:
                      type: object
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object

  /postCartDetails:
    post:
      tags:
        - Products
      security:
        - BearerAuth: []
      summary: Post the cart details
      description: Post the cart details 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_items_id:
                  type: integer
      responses:
        '200':
          description: posted Successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "cart details submitted"
        '403':
          description: Not Submitted
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not Submitted"

  /updateCartDetails/{id}:
    patch:
      tags:
        - Products
      security:
        - BearerAuth: []
      summary: update the cart details of the user.
      description: update the cart details of users.
      parameters:
        - name: id
          in: path
          required: true
          description: id of an product_items
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object

  /removeCartDetails/{id}:
    delete:
      tags:
        - Products
      security:
        - BearerAuth: []
      summary: Delete a cart product of user.
      description: Delete the cart registered users.
      parameters:
        - name: id
          in: path
          required: true
          description: id of an product_items
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: successfull response
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Deleted successfully"
        '403':
          description: Not Deleted
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not Deleted"
  /saveForLater/{id}:
    put:
      tags:
        - Products
      security: 
        - BearerAuth : []
      summary: Updates the save for later cart
      parameters:
        - name: id
          in: path
          required: true
          description: id of product_item
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object
  /moveToCart/{id}:
    put:
      tags:
        - Products
      security: 
        - BearerAuth : []
      summary: Updates the move to cart
      parameters:
        - name: id
          in: path
          required: true
          description: id of product_item
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object
  /getWishList:
    get:
      tags:
        - Products
      security:
        - BearerAuth: []
      summary: Returns a wishlist
      description: Retrieves information about wishlist details.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                    status:
                      type: boolean
                      example: true
                    message:
                      type: object
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object

  /postWishList/{id}:
    post:
      tags:
        - Products
      security:
        - BearerAuth: []
      summary: Post the wishlist
      description: Post the wishlist
      parameters:
        - name: id
          in: path
          required: true
          description: id of an user
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: posted Successfully
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "wishlist submitted"
        '403':
          description: Not Submitted
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not Submitted"

  /removeWishList/{id}:
    delete:
      tags:
        - Products
      security:
        - BearerAuth: []
      summary: Delete a wishlist of user.
      description: Delete the wishlist registered users.
      parameters:
        - name: id
          in: path
          required: true
          description: id of an product_items
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: successfull response
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Deleted successfully"
        '403':
          description: Not Deleted
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: string
                        example: "Not Deleted"
  /paymentItem:
    get:
      tags:
        - Products
      security:
        - BearerAuth: []
      summary: Payment process
      description: Retrieves the payment url redirection
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                    status:
                      type: boolean
                      example: true
                    message:
                      type: object
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object

  /getOrders:
    get:
      tags:
        - Products
      security:
        - BearerAuth: []
      summary: Retrieves the orders
      description: Retrieves the orders of user
      responses:
        '200':
          description: Successfull response
          content:
            application/json:
              schema:
                type: object
                properties:
                    status:
                      type: boolean
                      example: true
                    message:
                      type: object
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object

  /getDeliveryStatus/{id}:
    get:
      tags:
        - Products
      security:
        - BearerAuth: []
      summary: Retrieves the delivery status
      description: Retrieves the delivery status of user
      parameters:
        - name: id
          in: path
          required: true
          description: id of an tracking number
          schema:
            type : integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Successfull response
          content:
            application/json:
              schema:
                type: object
                properties:
                    status:
                      type: boolean
                      example: true
                    message:
                      type: object
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object

  /updateDeliveryStatus:
    put:
      tags:
        - Products
      security: 
        - BearerAuth : []
      summary: Updates the Delivery Status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                delivery_status:
                  type: string
                tracking_num:
                  type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: true
                      message:
                        type: object
                        
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object

  /es/getSubcategoryProducts/{id}:
    get:
      tags:
        - Products
      summary: Filters using elastic search
      parameters:
        - name: id
          in: path
          required: true
          description: id of an product_items
          schema:
            type : integer
            format: int64
            minimum: 1
        - name: rating
          in: query
          description: rating of an product_items
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          description: sorting of an product_items
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: f_assured
          in: query
          description: f_assured of an product_items
          required: false
          schema:
            type: boolean
        - name: minPrice
          in: query
          description: minPrice of an product_items
          required: false
          schema:
            type: integer
        - name: maxPrice
          in: query
          description: maxPrice of an product_items
          required: false
          schema:
            type: integer
        
      responses:
        '200':
          description: Successfull response
          content:
            application/json:
              schema:
                type: object
                properties:
                    status:
                      type: boolean
                      example: true
                    message:
                      type: object
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object

  /search:
    get:
      tags:
        - Products
      summary: Search for Products
      parameters:
        - name: name
          in: query
          description: search value of the product
          required: true
          schema:
            type: string
            
      responses:
        '200':
          description: Successfull response
          content:
            application/json:
              schema:
                type: object
                properties:
                    status:
                      type: boolean
                      example: true
                    message:
                      type: object
        '403':
          description: Error Response
          content:
            application/json:
              schema: 
                    type: object
                    properties:
                      status:
                        type: boolean
                        example: false
                      message:
                        type: object

      